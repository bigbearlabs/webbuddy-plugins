-# ### The filtering UI markup.
-# all styling implemented in stylesheet.
-# attributes suffixed with _ are temporary disabled but not removed as they can be useful for future behavioural tweaks.

.filtering.app-view( ng-controller='FilteringCtrl')

  section.command-bar ng-class="view_model.classes.command_bar"
    h3.hidden Filter
    input#input-field( autofocus="autofocus" ng-model="data.input" ng-change="" )


  p ng-click="view_model.show_dev = ! view_model.show_dev" show_dev

  section.tweaks ng-show="view_model.show_dev"

    p ng-click="view_model.classes.command_bar.hidden = ! view_model.classes.command_bar.hidden" command bar

    p ng-click="view_model.classes.stack_content_item_label.hidden = ! view_model.classes.stack_content_item_label.hidden" labels

    p sort: {{view_model.sort}}
    / TODO make toggle

    // experimental
    p editable-textarea="view_model.match_strategy_text" onbeforesave="update_match_strategy($data)" matcher: {{ view_model.match_strategy_text }}
    -# TODO on commit, re-eval and store on $scope.matching_searches.


  section.master

    .subsection(
        ng-repeat="(subsection_name, subsection) in view_model.subsections"
        ng-show="subsection.items.length > 0"
        )

      .button-group.hidden
        p.hidden sort:
        .tiny.button.sort#by_date date
        .tiny.button.sort#by_size size
        .tiny.button.sort#none none
      -# TODO wire to a sort controller method, then to implementation components.

      h3 ng-bind="subsection.name"

      -# render each stack.
      ul.hit-list bindonce="subsection.items"

        -# filtering is now data-driven but left here for reference.
        -# li.item( ng-repeat="item in view_model.items | filter:{matched:true} | orderBy: view_model.sort"

        li.item.stack(
            ng-repeat="item in subsection.items | limitTo:view_model.limit | orderBy: view_model.sort"
            ng-class="classes(item)"
            ng-click="preview(item)"
            data-masonry-options='{ "itemSelector": "item", "columnWidth": ".item", "gutterWidth": 0 }'
            ng-style="view_model.classes.stack"
            focusable
            focus-on-selected

            ng-include="template(item)"
            )
          -# ng-mouseleave_="hide_preview(item)"
          -# ng-show="item.matched"


  section.evaluator( ng-show="view_model.show_dev")
    .evaluator( ng-include="'views/eval.html'" ng-controller="EvalCtrl" )


    -# SCRIBBLE design candidate: list with category pane at left or top




script id="item-thumbnail-grid.html" type="text/ng-template"

  a( href=""
      bo-title="item.name + '\n' + 'Last accessed: ' + item.last_accessed"
      )
    img.stack-icon( bo-src="item.thumbnail_url")
    p.stack-label( bo-text="item.name" )
    p.stack-detail() Last accessed: {{ item.last_accessed | date:'yyyy.MM.dd H:mm'}}
    p.stack-detail() First accessed: {{ item.first_accessed | date:'yyyy.MM.dd H:mm'}}
    p.stack-detail() Frequency: {{ item.visit_count | date:'yyyy.MM.dd H:mm'}}

  / TODO embed in scrollable div.
  .stack-content-container

    -# render each page in stack.
    .stack-content-item( ng-repeat="detail_item in item.items | limitTo: view_model.limit_detail"
        focusable )

      a( href="{{detail_item.url}}"
          title="{{tooltip(detail_item)}}"
          enable-when=""
          )
        img.thumbnail( rn-lazy-background="'{{detail_item.thumbnail_url}}'" )
        p.stack-content-item-label ng-class="view_model.classes.stack_content_item_label"
          | {{detail_item.name}}

  / ## a 'more...' button.
  / li.item.button( ng-show="subsection.items.length > view_model.limit" )
  /   p More...

   / end hit-list.


script id="item-text.html" type="text/ng-template"

  a( href=""
      bo-title="item.name"
      )
    p.stack-label( bo-text="item.name" )

  .stack-content-container

    -# render each page in stack.
    .stack-content-item( ng-repeat="detail_item in item.items | limitTo: view_model.limit_detail"
        focusable )

      a( href="{{detail_item.url}}"
          title="{{tooltip(detail_item)}}"
          enable-when=""
          )
        p.stack-content-item-label ng-class="view_model.classes.stack_content_item_label"
          | {{detail_item.name}}

