-# ### The filtering UI markup.
-# all styling implemented in stylesheet.
-# attributes suffixed with _ are temporary disabled but not removed as they can be useful for future behavioural tweaks.

.filtering( ng-controller='FilteringCtrl')

  section.command-bar( )
    h3.hidden Filter
    input( ng-model="data.input" ng-change="" )

    -# h3 Matching


    -# p( editable-textarea="matching_searches_expr"
    -#   onbeforesave="update_matching_searches()"
    -#   ) {{ matching_searches_expr }}
    -# -# TODO on commit, re-eval and store on $scope.matching_searches.

  section.master

    -### master subsections

    .subsection ng-init="subsection = view_model.singular_subsection"

      / .subsection( ng-repeat="subsection in view_model.subsections"
      /   ng-show="subsection.hits.length > 0"
      /   )

      .button-group.hidden
        p.hidden sort:
        .tiny.button.sort#by_date date
        .tiny.button.sort#by_size size
        .tiny.button.sort#none none
      -# TODO wire to a sort controller method, then to implementation components.

      h3.hidden( ng-bind="subsection.name")

      ul.hit-list( bindonce="subsection.hits" masonry
        )

        -# filtering is now data-driven but left here for reference.
        -# li.item( ng-repeat="item in view_model.hits | filter:{matched:true} | orderBy: view_model.sort"

        li.item.stack.masonry-brick( ng-repeat="item in subsection.hits"
          ng-class="classes(item)"
          ng-mouseover="preview(item)"
          data-masonry-options='{ "itemSelector": "item", "columnWidth": ".item", "gutterWidth": 0 }'
          )
          -# ng-mouseleave_="hide_preview(item)"
          -# ng-show="item.matched"

          -# render a stack
          a( bo-href="item.url" bo-title="item.name + '\n' + 'Last accessed: ' + item.last_accessed_timestamp"
            )
            img.hit-icon( bo-src="item.thumbnail_url")
            p( bo-text="item.name" )

        / ## a 'more...' button.
        / li.item.button( ng-show="subsection.hits.length > view_model.limit" )
        /   p More...

         / end hit-list.


  -### detail section for the highlighted item in master

  section.detail
    / templates
    script id="thumbnail-grid.html" type="text/ng-template"
      h2( ng-bind="view_model.selected_item.name" )

      p( ng-show="view_model.selected_item.msg" ) {{view_model.selected_item.msg}} <br/> <a href="{{view_model.selected_item.details_url}}">More info...</a>

      ul.detail-list
        li.item.thumbnail( ng-repeat="detail_item in view_model.selected_item.items | limitTo: view_model.limit_detail | orderBy: view_model.detail.sort" )
          a( href="{{detail_item.url}}" title="{{tooltip(detail_item)}}")
            img( ng-src="{{detail_item.thumbnail_url}}" )
            p
              | {{detail_item.name}}

    script id="text-list.html" type="text/ng-template"
      h2( ng-bind="view_model.selected_item.name" )

      p( ng-show="view_model.selected_item.msg" ) {{view_model.selected_item.msg}} <br/> <a href="{{view_model.selected_item.details_url}}">More info...</a>

      ul.detail-list
        li.item.list-entry( ng-repeat="detail_item in view_model.selected_item.items | limitTo: view_model.limit_detail | orderBy: view_model.detail.sort" )
          a( href="{{detail_item.url}}" title="{{tooltip(detail_item)}}")
            img( ng-src="{{detail_item.thumbnail_url}}" )
            p
              | {{detail_item.name}}

    ng-include src="view_model.selected_item.template || view_model.detail.template"



  section.evaluator.dev
    .evaluator( ng-include="'views/eval.html'" ng-controller="EvalCtrl" )


    -# SCRIBBLE design candidate: list with category pane at left or top
